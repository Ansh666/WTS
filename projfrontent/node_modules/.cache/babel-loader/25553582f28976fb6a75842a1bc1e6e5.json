{"ast":null,"code":"import { API } from \"../../backend\";\nimport { cartEmpty } from \"../../core/helper/cartHelper\";\nexport const signup = async user => {\n  try {\n    const response = await fetch(`${API}user/`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const signin = user => {\n  const formData = new FormData();\n\n  for (const name in user) {\n    console.log(user[name]);\n    formData.append(name, user[name]);\n  } // const {email, password} = user;\n  // const formData = new FormData();\n  // formData.append('email', email)\n  // formData.append('password', password)\n\n\n  for (var key of formData.keys()) {\n    console.log(\"MYKEY: \", key);\n  }\n\n  return fetch(`${API}user/login/`, {\n    method: \"POST\",\n    body: formData\n  }).then(response => {\n    console.log(\"SUCCESS\", response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\")); //TODO: compare JWT with database json token\n  } else {\n    return false;\n  }\n};\nexport const signout = next => {\n  const userId = isAuthenticated() && isAuthenticated().user.id;\n  console.log(\"USERID: \", userId);\n\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"jwt\");\n    cartEmpty(() => {}); //next();\n\n    return fetch(`${API}user/logout/${userId}`, {\n      method: \"GET\"\n    }).then(response => {\n      console.log(\"Signout success\");\n      next();\n    }).catch(err => console.log(err));\n  }\n};","map":{"version":3,"sources":["C:/Python/WTS/projfrontent/src/auth/helper/index.js"],"names":["API","cartEmpty","signup","user","response","fetch","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","formData","FormData","name","append","key","keys","then","catch","authenticate","data","next","window","undefined","localStorage","setItem","isAuthenticated","getItem","parse","signout","userId","id","removeItem"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\r\nimport { cartEmpty } from \"../../core/helper/cartHelper\";\r\n\r\nexport const signup = async (user) => {\r\n  try {\r\n    const response = await fetch(`${API}user/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const signin = (user) => {\r\n  const formData = new FormData();\r\n\r\n  for (const name in user) {\r\n    console.log(user[name]);\r\n    formData.append(name, user[name]);\r\n  }\r\n\r\n  // const {email, password} = user;\r\n  // const formData = new FormData();\r\n  // formData.append('email', email)\r\n  // formData.append('password', password)\r\n\r\n  for (var key of formData.keys()) {\r\n    console.log(\"MYKEY: \", key);\r\n  }\r\n\r\n  return fetch(`${API}user/login/`, {\r\n    method: \"POST\",\r\n\r\n    body: formData,\r\n  })\r\n    .then((response) => {\r\n      console.log(\"SUCCESS\", response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== undefined) {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == undefined) {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n    //TODO: compare JWT with database json token\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  const userId = isAuthenticated() && isAuthenticated().user.id;\r\n\r\n  console.log(\"USERID: \", userId);\r\n\r\n  if (typeof window !== undefined) {\r\n    localStorage.removeItem(\"jwt\");\r\n    cartEmpty(() => {});\r\n    //next();\r\n\r\n    return fetch(`${API}user/logout/${userId}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Signout success\");\r\n        next();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}