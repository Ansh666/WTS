{"ast":null,"code":"import { API } from \"../../backend\";\nimport { cartEmpty } from \"../../core/helper/cartHelper\";\nexport const signup = async user => {\n  try {\n    const response = await fetch(`${API}user/`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const signin = async user => {\n  const formData = new FormData();\n\n  for (const name in user) {\n    console.log(user[name]);\n    formData.append(name, user[name]);\n  } // const {email, password} = user;\n  // const formData = new FormData();\n  // formData.append('email', email)\n  // formData.append('password', password)\n\n\n  for (var key of formData.keys()) {\n    console.log(\"MYKEY: \", key);\n  }\n\n  try {\n    const response = await fetch(`${API}user/login/`, {\n      method: \"POST\",\n      body: formData\n    });\n    console.log(\"SUCCESS\", response);\n    return await response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const signout = async next => {\n  const userId = isAuthenticated() && isAuthenticated().user.id;\n  console.log(\"USERID: \", userId);\n\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"jwt\");\n    cartEmpty(() => {}); //next();\n\n    try {\n      const response = await fetch(`${API}user/logout/${userId}`, {\n        method: \"GET\"\n      });\n      console.log(\"Signout success\");\n      next();\n    } catch (err) {\n      return console.log(err);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Python/WTS/projfrontent/src/auth/helper/index.js"],"names":["API","cartEmpty","signup","user","response","fetch","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","formData","FormData","name","append","key","keys","authenticate","data","next","window","undefined","localStorage","setItem","isAuthenticated","getItem","parse","signout","userId","id","removeItem"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\r\nimport { cartEmpty } from \"../../core/helper/cartHelper\";\r\n\r\nexport const signup = async (user) => {\r\n  try {\r\n    const response = await fetch(`${API}user/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const signin = async (user) => {\r\n  const formData = new FormData();\r\n\r\n  for (const name in user) {\r\n    console.log(user[name]);\r\n    formData.append(name, user[name]);\r\n  }\r\n\r\n  // const {email, password} = user;\r\n  // const formData = new FormData();\r\n  // formData.append('email', email)\r\n  // formData.append('password', password)\r\n\r\n  for (var key of formData.keys()) {\r\n    console.log(\"MYKEY: \", key);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API}user/login/`, {\r\n      method: \"POST\",\r\n\r\n      body: formData,\r\n    });\r\n    console.log(\"SUCCESS\", response);\r\n    return await response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== undefined) {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == undefined) {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const signout = async (next) => {\r\n  const userId = isAuthenticated() && isAuthenticated().user.id;\r\n\r\n  console.log(\"USERID: \", userId);\r\n\r\n  if (typeof window !== undefined) {\r\n    localStorage.removeItem(\"jwt\");\r\n    cartEmpty(() => {});\r\n    //next();\r\n\r\n    try {\r\n      const response = await fetch(`${API}user/logout/${userId}`, {\r\n        method: \"GET\",\r\n      });\r\n      console.log(\"Signout success\");\r\n      next();\r\n    } catch (err) {\r\n      return console.log(err);\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}