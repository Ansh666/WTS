{"ast":null,"code":"import{API}from\"../../backend\";export var getmeToken=function getmeToken(userId,token){return fetch(\"\".concat(API,\"payment/gettoken/\").concat(userId,\"/\").concat(token,\"/\"),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var processPayment=function processPayment(userId,token,paymentInfo){var formData=new FormData();for(var name in paymentInfo){formData.append(name,paymentInfo[name]);}return fetch(\"\".concat(API,\"payment/process/\").concat(userId,\"/\").concat(token,\"/\"),{method:\"POST\",body:formData}).then(function(response){console.log(\"p-0\",response);return response.json();});//.catch((err) => console.log(err));\n};","map":{"version":3,"sources":["E:/PROJECTS/Python/WTS/projfrontent/src/core/helper/paymentHelper.js"],"names":["API","getmeToken","userId","token","fetch","method","then","response","json","catch","err","console","log","processPayment","paymentInfo","formData","FormData","name","append","body"],"mappings":"AAAA,OAASA,GAAT,KAAoB,eAApB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,KAAT,CAAmB,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,GAAJ,6BAA2BE,MAA3B,aAAqCC,KAArC,MAA+C,CACzDE,MAAM,CAAE,KADiD,CAA/C,CAAL,CAGJC,IAHI,CAGC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CALI,EAMJC,KANI,CAME,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EANF,CAAP,CAOD,CARM,CAUP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACX,MAAD,CAASC,KAAT,CAAgBW,WAAhB,CAAgC,CAC5D,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CAEA,IAAK,GAAMC,CAAAA,IAAX,GAAmBH,CAAAA,WAAnB,CAAgC,CAC9BC,QAAQ,CAACG,MAAT,CAAgBD,IAAhB,CAAsBH,WAAW,CAACG,IAAD,CAAjC,EACD,CAED,MAAOb,CAAAA,KAAK,WAAIJ,GAAJ,4BAA0BE,MAA1B,aAAoCC,KAApC,MAA8C,CACxDE,MAAM,CAAE,MADgD,CAExDc,IAAI,CAAEJ,QAFkD,CAA9C,CAAL,CAGJT,IAHI,CAGC,SAACC,QAAD,CAAc,CACpBI,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBL,QAAnB,EACA,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CANM,CAAP,CAOA;AACD,CAfM","sourcesContent":["import { API } from \"../../backend\";\r\n\r\nexport const getmeToken = (userId, token) => {\r\n  return fetch(`${API}payment/gettoken/${userId}/${token}/`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentInfo) => {\r\n  const formData = new FormData();\r\n\r\n  for (const name in paymentInfo) {\r\n    formData.append(name, paymentInfo[name]);\r\n  }\r\n\r\n  return fetch(`${API}payment/process/${userId}/${token}/`, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }).then((response) => {\r\n    console.log(\"p-0\", response);\r\n    return response.json();\r\n  });\r\n  //.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}