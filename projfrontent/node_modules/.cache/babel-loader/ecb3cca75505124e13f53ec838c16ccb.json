{"ast":null,"code":"import _slicedToArray from\"E:/PROJECTS/Python/WTS/projfrontent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Base from\"./Base\";import Card from\"./Card\";import{loadCart}from\"./helper/cartHelper\";import PaymentB from\"./PaymentB\";import GooglePayButton from\"@google-pay/button-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),reload=_useState2[0],setReload=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),products=_useState4[0],setProducts=_useState4[1];useEffect(function(){setProducts(loadCart());},[reload]);var loadAllProducts=function loadAllProducts(products){return/*#__PURE__*/_jsx(\"div\",{children:products.map(function(product,index){return/*#__PURE__*/_jsx(Card,{product:product,removeFromCart:true,addtoCart:false,reload:reload,setReload:setReload},index);})});};// eslint-disable-next-line\nvar loadCheckout=function loadCheckout(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Checkout\"})});};return/*#__PURE__*/_jsx(Base,{title:\"Cart page\",description:\"Welcome to checkout\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:products.length>0?loadAllProducts(products):/*#__PURE__*/_jsx(\"h4\",{children:\"No products\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[products.length>0?/*#__PURE__*/_jsx(PaymentB,{products:products,setReload:setReload}):/*#__PURE__*/_jsx(\"h3\",{children:\"Please login or add something in cart\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Or pay with GPay\"}),/*#__PURE__*/_jsx(GooglePayButton,{environment:\"TEST\",paymentRequest:{apiVersion:2,apiVersionMinor:0,allowedPaymentMethods:[{type:\"CARD\",parameters:{allowedAuthMethods:[\"PAN_ONLY\",\"CRYPTOGRAM_3DS\"],allowedCardNetworks:[\"MASTERCARD\",\"VISA\"]},tokenizationSpecification:{type:\"PAYMENT_GATEWAY\",parameters:{gateway:\"example\",gatewayMerchantId:\"exampleGatewayMerchantId\"}}}],merchantInfo:{merchantId:\"12345678901234567890\",merchantName:\"Demo Merchant\"},transactionInfo:{totalPriceStatus:\"FINAL\",totalPriceLabel:\"Total\",totalPrice:\"1.00\",currencyCode:\"USD\",countryCode:\"US\"},shippingAddressRequired:true,callbackIntents:[\"SHIPPING_ADDRESS\",\"PAYMENT_AUTHORIZATION\"]},onLoadPaymentData:function onLoadPaymentData(paymentRequest){console.log(\"Success\",paymentRequest);},onPaymentAuthorized:function onPaymentAuthorized(PaymentData){console.log(\"payment Authorised Success\",PaymentData);return{transactionState:\" SUCCESS\"};},onPaymentDataChanged:function onPaymentDataChanged(PaymentData){console.log(\"On Payment Data Changed\",PaymentData);return{};},existingPaymentMethodRequired:\"false\",buttonColor:\"black\",buttonType:\"Buy\"})]})]})});};export default Cart;","map":{"version":3,"sources":["E:/PROJECTS/Python/WTS/projfrontent/src/core/Cart.js"],"names":["React","useState","useEffect","Base","Card","loadCart","PaymentB","GooglePayButton","Cart","reload","setReload","products","setProducts","loadAllProducts","map","product","index","loadCheckout","length","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","countryCode","shippingAddressRequired","callbackIntents","paymentRequest","console","log","PaymentData","transactionState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\n\r\nimport Card from \"./Card\";\r\nimport { loadCart } from \"./helper/cartHelper\";\r\nimport PaymentB from \"./PaymentB\";\r\nimport GooglePayButton from \"@google-pay/button-react\";\r\n\r\nconst Cart = () => {\r\n  const [reload, setReload] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setProducts(loadCart());\r\n  }, [reload]);\r\n\r\n  const loadAllProducts = (products) => {\r\n    return (\r\n      <div>\r\n        {products.map((product, index) => (\r\n          <Card\r\n            key={index}\r\n            product={product}\r\n            removeFromCart={true}\r\n            addtoCart={false}\r\n            reload={reload}\r\n            setReload={setReload}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  // eslint-disable-next-line\r\n  const loadCheckout = () => {\r\n    return (\r\n      <div>\r\n        <h1>Checkout</h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Cart page\" description=\"Welcome to checkout\">\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-6\">\r\n          {products.length > 0 ? (\r\n            loadAllProducts(products)\r\n          ) : (\r\n            <h4>No products</h4>\r\n          )}\r\n        </div>\r\n        <div className=\"col-6\">\r\n          {products.length > 0 ? (\r\n            <PaymentB products={products} setReload={setReload} />\r\n          ) : (\r\n            <h3>Please login or add something in cart</h3>\r\n          )}\r\n          <hr />\r\n          <h3>Or pay with GPay</h3>\r\n          <GooglePayButton\r\n            environment=\"TEST\"\r\n            paymentRequest={{\r\n              apiVersion: 2,\r\n              apiVersionMinor: 0,\r\n              allowedPaymentMethods: [\r\n                {\r\n                  type: \"CARD\",\r\n                  parameters: {\r\n                    allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                    allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\r\n                  },\r\n                  tokenizationSpecification: {\r\n                    type: \"PAYMENT_GATEWAY\",\r\n                    parameters: {\r\n                      gateway: \"example\",\r\n                      gatewayMerchantId: \"exampleGatewayMerchantId\",\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n              merchantInfo: {\r\n                merchantId: \"12345678901234567890\",\r\n                merchantName: \"Demo Merchant\",\r\n              },\r\n              transactionInfo: {\r\n                totalPriceStatus: \"FINAL\",\r\n                totalPriceLabel: \"Total\",\r\n                totalPrice: \"1.00\",\r\n                currencyCode: \"USD\",\r\n                countryCode: \"US\",\r\n              },\r\n              shippingAddressRequired: true,\r\n              callbackIntents: [\"SHIPPING_ADDRESS\", \"PAYMENT_AUTHORIZATION\"],\r\n            }}\r\n            onLoadPaymentData={(paymentRequest) => {\r\n              console.log(\"Success\", paymentRequest);\r\n            }}\r\n            onPaymentAuthorized={(PaymentData) => {\r\n              console.log(\"payment Authorised Success\", PaymentData);\r\n              return { transactionState: \" SUCCESS\" };\r\n            }}\r\n            onPaymentDataChanged={(PaymentData) => {\r\n              console.log(\"On Payment Data Changed\", PaymentData);\r\n              return {};\r\n            }}\r\n            existingPaymentMethodRequired=\"false\"\r\n            buttonColor=\"black\"\r\n            buttonType=\"Buy\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}