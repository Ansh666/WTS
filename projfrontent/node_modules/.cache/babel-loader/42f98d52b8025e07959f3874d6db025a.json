{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\WTS\\\\projfrontent\\\\src\\\\core\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart } from \"./helper/cartHelper\";\nimport PaymentB from \"./PaymentB\";\nimport GooglePayButton from \"@google-pay/button-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const [reload, setReload] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    setProducts(loadCart());\n  }, [reload]);\n\n  const loadAllProducts = products => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(Card, {\n        product: product,\n        removeFromCart: true,\n        addtoCart: false,\n        reload: reload,\n        setReload: setReload\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }; // eslint-disable-next-line\n\n\n  const loadCheckout = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Cart page\",\n    description: \"Welcome to checkout\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: products.length > 0 ? loadAllProducts(products) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [products.length > 0 ? /*#__PURE__*/_jsxDEV(PaymentB, {\n          products: products,\n          setReload: setReload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please login or add something in cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Or pay with GPay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GooglePayButton, {\n          environment: \"TEST\",\n          paymentRequest: {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            allowedPaymentMethods: [{\n              type: \"CARD\",\n              parameters: {\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\n              },\n              tokenizationSpecification: {\n                type: \"PAYMENT_GATEWAY\",\n                parameters: {\n                  gateway: \"example\",\n                  gatewayMerchantId: \"exampleGatewayMerchantId\"\n                }\n              }\n            }],\n            merchantInfo: {\n              merchantId: \"12345678901234567890\",\n              merchantName: \"Demo Merchant\"\n            },\n            transactionInfo: {\n              totalPriceStatus: \"FINAL\",\n              totalPriceLabel: \"Total\",\n              totalPrice: \"1.00\",\n              currencyCode: \"USD\",\n              countryCode: \"US\"\n            },\n            shippingAddressRequired: true,\n            callbackIntents: [\"SHIPPING_ADDRESS\", \"PAYMENT_AUTHORIZATION\"]\n          },\n          onLoadPaymentData: paymentRequest => {\n            console.log(\"Success\", paymentRequest);\n          },\n          onPaymentAuthorized: PaymentData => {\n            console.log(\"payment Authorised Success\", PaymentData);\n            return {\n              transactionState: \" SUCCESS\"\n            };\n          },\n          onPaymentDataChanged: PaymentData => {\n            console.log(\"On Payment Data Changed\", PaymentData);\n            return {};\n          },\n          existingPaymentMethodRequired: \"false\",\n          buttonColor: \"black\",\n          buttonType: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"slguqdL+rkYaNofBNOQ9wZcs9YY=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Python/WTS/projfrontent/src/core/Cart.js"],"names":["React","useState","useEffect","Base","Card","loadCart","PaymentB","GooglePayButton","Cart","reload","setReload","products","setProducts","loadAllProducts","map","product","index","loadCheckout","length","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","countryCode","shippingAddressRequired","callbackIntents","paymentRequest","console","log","PaymentData","transactionState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\n\r\nimport Card from \"./Card\";\r\nimport { loadCart } from \"./helper/cartHelper\";\r\nimport PaymentB from \"./PaymentB\";\r\nimport GooglePayButton from \"@google-pay/button-react\";\r\n\r\nconst Cart = () => {\r\n  const [reload, setReload] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setProducts(loadCart());\r\n  }, [reload]);\r\n\r\n  const loadAllProducts = (products) => {\r\n    return (\r\n      <div>\r\n        {products.map((product, index) => (\r\n          <Card\r\n            key={index}\r\n            product={product}\r\n            removeFromCart={true}\r\n            addtoCart={false}\r\n            reload={reload}\r\n            setReload={setReload}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  // eslint-disable-next-line\r\n  const loadCheckout = () => {\r\n    return (\r\n      <div>\r\n        <h1>Checkout</h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Cart page\" description=\"Welcome to checkout\">\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-6\">\r\n          {products.length > 0 ? (\r\n            loadAllProducts(products)\r\n          ) : (\r\n            <h4>No products</h4>\r\n          )}\r\n        </div>\r\n        <div className=\"col-6\">\r\n          {products.length > 0 ? (\r\n            <PaymentB products={products} setReload={setReload} />\r\n          ) : (\r\n            <h3>Please login or add something in cart</h3>\r\n          )}\r\n          <hr />\r\n          <h3>Or pay with GPay</h3>\r\n          <GooglePayButton\r\n            environment=\"TEST\"\r\n            paymentRequest={{\r\n              apiVersion: 2,\r\n              apiVersionMinor: 0,\r\n              allowedPaymentMethods: [\r\n                {\r\n                  type: \"CARD\",\r\n                  parameters: {\r\n                    allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                    allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\r\n                  },\r\n                  tokenizationSpecification: {\r\n                    type: \"PAYMENT_GATEWAY\",\r\n                    parameters: {\r\n                      gateway: \"example\",\r\n                      gatewayMerchantId: \"exampleGatewayMerchantId\",\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n              merchantInfo: {\r\n                merchantId: \"12345678901234567890\",\r\n                merchantName: \"Demo Merchant\",\r\n              },\r\n              transactionInfo: {\r\n                totalPriceStatus: \"FINAL\",\r\n                totalPriceLabel: \"Total\",\r\n                totalPrice: \"1.00\",\r\n                currencyCode: \"USD\",\r\n                countryCode: \"US\",\r\n              },\r\n              shippingAddressRequired: true,\r\n              callbackIntents: [\"SHIPPING_ADDRESS\", \"PAYMENT_AUTHORIZATION\"],\r\n            }}\r\n            onLoadPaymentData={(paymentRequest) => {\r\n              console.log(\"Success\", paymentRequest);\r\n            }}\r\n            onPaymentAuthorized={(PaymentData) => {\r\n              console.log(\"payment Authorised Success\", PaymentData);\r\n              return { transactionState: \" SUCCESS\" };\r\n            }}\r\n            onPaymentDataChanged={(PaymentData) => {\r\n              console.log(\"On Payment Data Changed\", PaymentData);\r\n              return {};\r\n            }}\r\n            existingPaymentMethodRequired=\"false\"\r\n            buttonColor=\"black\"\r\n            buttonType=\"Buy\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}